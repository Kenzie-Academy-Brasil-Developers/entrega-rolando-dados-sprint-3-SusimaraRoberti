Rolando Dados,,,,,,,,,
,,,,,,,,,
function rolarDados,,,,,,,,,
zerar posições,,,,,,,,,
i = 0,i < 11,count[i] = 0,i++,,,,,,
0,-,-,-,,,,,,
0,true,-,0+1,,,,,,
1,true,-,1+1,,,,,,
2,true,-,2+1,,,,,,
3,true,-,3+1,,,,,,
...,...,...,...,,,,,,
10,true,-,10+1,,,,,,
11,false,"[0,0,0,0,0,0,0,0,0,0,0]",stop,,,,,,
,,,,,,,,,
------------------,------------------,----------------------,------------------,----------------------------,------------------,------------------,------------------,------------------,-------------------
,,,,,,,,,
rolar e somar os resultados,(aleatório),,,,,,,,
i = 0,i < 1000,count [soma - 2] += 1,i++,Return,,,,,
0,-,-,-,-,,,,,
0,true,-,-,-,,,,,
0,true,[7 - 2 = 5 (armazena todo resultado 7 no índice 5)],0+1,-,,,,,
1,true,[11 - 2 = 9 (armazena todo resultado 11 no índice 9)],1+1,-,,,,,
2,true,[5 - 2 = 3 (armazena todo resultado 5 no índice 3)],2+1,-,,,,,
3,true,[12 - 2 = 10 (armazena todo resultado 12 no índice 10)],3+1,-,,,,,
...,...,,---,-,,,,,
998,true,[9 - 2 = 7 (armazena todo resultado 9 no índice 7)],998 + 1,-,,,,,
999,true,[4 - 2 = 2 (armazena todo resultado 4 no índice 2)],999 + 1,-,,,,,
1000,false,-,stop,"[14,41,75,124,160,174,153,126,94,31,8]",,,,,
,,,,,,,,,
------------------,------------------,----------------------,------------------,----------------------------,------------------,------------------,------------------,------------------,-------------------
,,,,,,,,,
function dados,,,,,,,,,
vezes.map,,(rolou),,,,,,,
i = 0,i < vezes.length,vezes[i],i++,numero ++,,,,,
0,-,-,-,,,,,,
0,true,(x vezes),0+1,2+1,,,,,
1,true,(x vezes),1+1,3+1,,,,,
2,true,(x vezes),2+1,4+1,,,,,
3,true,(x vezes),3+1,5+1,,,,,
4,true,(x vezes),4+1,6+1,,,,,
5,true,(x vezes),5+1,7+1,,,,,
6,true,(x vezes),6+1,8+1,,,,,
7,true,(x vezes),7+1,9+1,,,,,
8,true,(x vezes),8+1,10+1,,,,,
9,true,(x vezes),9+1,11+1,,,,,
10,true,(x vezes),10+1,12+1,,,,,
11,false,-,stop,stop,,,,,
,,,,,,,,,
,,,,,,,,,